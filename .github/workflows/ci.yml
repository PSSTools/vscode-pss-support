name: CI
on:
  - push
  - pull_request
  - workflow_dispatch

jobs:
  ci-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: fregante/setup-git-user@v2
      - name: Update PSS Grammar
        run: |
          ./scripts/update_grammar.sh
      - name: Setup Node version
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Install VSCE
        run: |
          npm install -i -g vsce
      - name: Install dependencies
        run: |
          npm install --frozen-lockfile
      - name: Package Extension (Stable)
        run: |
          base_version=$(grep '\[[0-9][0-9]*\.[0-9][0-9*\.[0-9][0-9]*\]' CHANGELOG.md  | head -n 1)
          base_version=$(echo $base_version | sed -e 's/##//' -e 's/\[//g' -e 's/\]//g')
          version=${base_version}-${GITHUB_RUN_ID}
          vsce package 
      - name: Release
        if: startsWith(github.ref, 'refs/heads/master')
        run: |
          base_version=$(grep '\[[0-9][0-9]*\.[0-9][0-9*\.[0-9][0-9]*\]' CHANGELOG.md  | head -n 1)
          base_version=$(echo $base_version | sed -e 's/##//' -e 's/\[//g' -e 's/\]//g')
          version=${base_version}-${GITHUB_RUN_ID}
          vsce publish -p ${{ secrets.VS_MARKETPLACE_PAT }} --no-git-tag-version patch 
      
#  ci-macos-arm64:
#    runs-on: [self-hosted, macOS, ARM64]
#    steps:
#      - uses: actions/checkout@v1
#      - name: Fetch source dependencies
#        run: |
#          export IVPM_PYTHON=python3
#          ${IVPM_PYTHON} -m pip install ivpm 
#          ${IVPM_PYTHON} -m ivpm update -a
#          ./packages/python/bin/python3 -m pip install twine
#      - name: Build packages
#        run: |
#          export BUILD_NUM=$GITHUB_RUN_ID
#          ./packages/python/bin/python3 setup.py bdist_wheel
#      - name: Publish to PyPi
#        if: startsWith(github.ref, 'refs/heads/main')
#        run: |
#          python3 -m twine upload dist/*
#        env:
#          TWINE_USERNAME: __token__
#          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
#  ci-macos-x86_64:
#    runs-on: [self-hosted, macOS, ARM64]
#    steps:
#      - uses: actions/checkout@v1
#      - name: Fetch source dependencies
#        run: |
#          export IVPM_PYTHON=/usr/local/bin/python3
#          arch -x86_64 ${IVPM_PYTHON} -m pip install ivpm 
#          arch -x86_64 ${IVPM_PYTHON} -m ivpm update -a
#          arch -x86_64 ./packages/python/bin/python3 -m pip install twine
#      - name: Build packages
#        run: |
#          export BUILD_NUM=$GITHUB_RUN_ID
#          arch -x86_64 ./packages/python/bin/python3 setup.py bdist_wheel --plat-name macosx_10_9_x86_64
#      - name: Publish to PyPi
#        if: startsWith(github.ref, 'refs/heads/main')
#        run: |
#          arch -x86_64 ./packages/python/bin/python3 -m twine upload dist/*_x86_64.whl
#        env:
#          TWINE_USERNAME: __token__
#          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
#
